/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExPopulusToken,
  ExPopulusTokenInterface,
} from "../ExPopulusToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDeployer",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerOrGameLogic",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameLogicAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameLogicAddress",
        type: "address",
      },
    ],
    name: "setGameLogicAdress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052346200034b5762000cbe803803806200001d8162000350565b92833981016060828203126200034b5781516001600160401b03908181116200034b57826200004e91850162000376565b90602092838501518281116200034b576040916200006e91870162000376565b9401516001600160a01b03811694908590036200034b5782518281116200024b576003918254916001958684811c9416801562000340575b888510146200032a578190601f94858111620002d4575b5088908583116001146200026d5760009262000261575b505060001982861b1c191690861b1783555b80519384116200024b5760049586548681811c9116801562000240575b828210146200022b57838111620001e0575b508092851160011462000172575093839491849260009562000166575b50501b92600019911b1c19161790555b600580546001600160a01b0319169190911790556040516108d59081620003e98239f35b01519350388062000132565b92919084601f1981168860005285600020956000905b89838310620001c55750505010620001aa575b50505050811b01905562000142565b01519060f884600019921b161c19169055388080806200019b565b85870151895590970196948501948893509081019062000188565b87600052816000208480880160051c82019284891062000221575b0160051c019087905b8281106200021457505062000115565b6000815501879062000204565b92508192620001fb565b602288634e487b7160e01b6000525260246000fd5b90607f169062000103565b634e487b7160e01b600052604160045260246000fd5b015190503880620000d4565b90889350601f19831691876000528a6000209260005b8c828210620002bd5750508411620002a4575b505050811b018355620000e6565b015160001983881b60f8161c1916905538808062000296565b8385015186558c9790950194938401930162000283565b90915085600052886000208580850160051c8201928b861062000320575b918a91869594930160051c01915b82811062000310575050620000bd565b600081558594508a910162000300565b92508192620002f2565b634e487b7160e01b600052602260045260246000fd5b93607f1693620000a6565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200024b57604052565b919080601f840112156200034b5782516001600160401b0381116200024b57602090620003ac601f8201601f1916830162000350565b928184528282870101116200034b5760005b818110620003d457508260009394955001015290565b8581018301518482018401528201620003be56fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461063f57508163095ea7b31461059757816318160ddd1461057857816323b872dd14610469578163313ce5671461044d57816336f08084146103c857816340c10f19146102d357816370a082311461029d57816391f3f18c1461027557816395d89b411461015657508063a9059cbb14610126578063d5f39488146100ff5763dd62ed3e146100b457600080fd5b346100fb57806003193601126100fb57806020926100d0610760565b6100d861077b565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100fb57816003193601126100fb576020906001600160a01b03600554169051908152f35b50346100fb57806003193601126100fb5760209061014f610145610760565b6024359033610791565b5160018152f35b8383346100fb57816003193601126100fb57805190828454600181811c9080831692831561026b575b60209384841081146102585783885290811561023c57506001146101e7575b505050829003601f01601f191682019267ffffffffffffffff8411838510176101d457508291826101d0925282610717565b0390f35b80604186634e487b7160e01b6024945252fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b838510610228575050505083010185808061019e565b805488860183015293019284908201610212565b60ff1916878501525050151560051b840101905085808061019e565b60248960228c634e487b7160e01b835252fd5b91607f169161017f565b5050346100fb57816003193601126100fb576020906001600160a01b03600654169051908152f35b5050346100fb5760203660031901126100fb57806020926001600160a01b036102c4610760565b16815280845220549051908152f35b919050346103c457806003193601126103c4576102ee610760565b90602435916001600160a01b03908160055416331415806103b6575b61038e57169283156103795760025490838201809211610366575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b856011602492634e487b7160e01b835252fd5b84602492519163ec442f0560e01b8352820152fd5b8483517f94b83580000000000000000000000000000000000000000000000000000000008152fd5b50816006541633141561030a565b8280fd5b9050346103c45760203660031901126103c4576103e3610760565b906001600160a01b039283600554163303610427575050167fffffffffffffffffffffffff0000000000000000000000000000000000000000600654161760065580f35b517f618bbdd5000000000000000000000000000000000000000000000000000000008152fd5b5050346100fb57816003193601126100fb576020905160128152f35b9050823461057557606036600319011261057557610485610760565b61048d61077b565b91604435936001600160a01b0383168083526001602052868320338452602052868320549160001983036104ca575b60208861014f898989610791565b86831061053057811561051a5733156105045750825260016020908152868320338452815291869020908590039055829061014f876104bc565b60249084895191634a1406b160e11b8352820152fd5b6024908489519163e602df0560e01b8352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346100fb57816003193601126100fb576020906002549051908152f35b9050346103c457816003193601126103c4576105b1610760565b602435903315610629576001600160a01b031691821561061357508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b60249085855191634a1406b160e11b8352820152fd5b6024838686519163e602df0560e01b8352820152fd5b849084346103c457826003193601126103c45782600354600181811c9080831692831561070d575b60209384841081146102585783885290811561023c57506001146106b757505050829003601f01601f191682019267ffffffffffffffff8411838510176101d457508291826101d0925282610717565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106106f9575050505083010185808061019e565b8054888601830152930192849082016106e3565b91607f1691610667565b6020808252825181830181905290939260005b82811061074c57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161072a565b600435906001600160a01b038216820361077657565b600080fd5b602435906001600160a01b038216820361077657565b916001600160a01b0380841692831561086e5716928315610856576000908382528160205260408220549083821061080b575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b602460405163ec442f0560e01b815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fdfea2646970667358221220e9efdede49ce8032a2be26944998e25961a070dc8a14b9550bb40139d0bb0ad264736f6c63430008140033";

export class ExPopulusToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _deployer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExPopulusToken> {
    return super.deploy(
      _name,
      _symbol,
      _deployer,
      overrides || {}
    ) as Promise<ExPopulusToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _deployer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _deployer,
      overrides || {}
    );
  }
  attach(address: string): ExPopulusToken {
    return super.attach(address) as ExPopulusToken;
  }
  connect(signer: Signer): ExPopulusToken__factory {
    return super.connect(signer) as ExPopulusToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExPopulusTokenInterface {
    return new utils.Interface(_abi) as ExPopulusTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExPopulusToken {
    return new Contract(address, _abi, signerOrProvider) as ExPopulusToken;
  }
}
